//------------------------------------------------------------------------------
// <auto-generated>
//     Dieser Code wurde von einem Tool generiert.
//     Laufzeitversion:4.0.30319.42000
//
//     Änderungen an dieser Datei können falsches Verhalten verursachen und gehen verloren, wenn
//     der Code erneut generiert wird.
// </auto-generated>
//------------------------------------------------------------------------------

namespace sensu_client.net_mssql.Properties {
    
    
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.VisualStudio.Editors.SettingsDesigner.SettingsSingleFileGenerator", "15.5.0.0")]
    internal sealed partial class Settings : global::System.Configuration.ApplicationSettingsBase {
        
        private static Settings defaultInstance = ((Settings)(global::System.Configuration.ApplicationSettingsBase.Synchronized(new Settings())));
        
        public static Settings Default {
            get {
                return defaultInstance;
            }
        }
        
        [global::System.Configuration.ApplicationScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("DECLARE @PCounters TABLE\r\n(\r\n\tobject_name nvarchar(128),\r\n\tcounter_name nvarchar(" +
            "128),\r\n\tinstance_name nvarchar(128),\r\n\tcntr_value bigint,\r\n\tcntr_type INT,\r\n\tPri" +
            "mary Key(object_name, counter_name, instance_name)\r\n);\r\nINSERT\tINTO @PCounters\r\n" +
            "SELECT\tDISTINCT\r\n\t\tRTrim(spi.object_name) object_name,\r\n\t\tRTrim(spi.counter_name" +
            ") counter_name,\r\n\t\tRTrim(spi.instance_name) instance_name,\r\n\t\tspi.cntr_value,\r\n\t" +
            "\tspi.cntr_type\r\nFROM\tsys.dm_os_performance_counters AS spi\r\nWHERE\t(\r\n\t\tcounter_n" +
            "ame IN (\r\n\t\t\t\'SQL Compilations/sec\',\r\n\t\t\t\'SQL Re-Compilations/sec\',\r\n\t\t\t\'User Co" +
            "nnections\',\r\n\t\t\t\'Batch Requests/sec\',\r\n\t\t\t\'Logouts/sec\',\r\n\t\t\t\'Logins/sec\',\r\n\t\t\t\'" +
            "Processes blocked\',\r\n\t\t\t\'Latch Waits/sec\',\r\n\t\t\t\'Full Scans/sec\',\r\n\t\t\t\'Index Sear" +
            "ches/sec\',\r\n\t\t\t\'Page Splits/sec\',\r\n\t\t\t\'Page Lookups/sec\',\r\n\t\t\t\'Page Reads/sec\',\r" +
            "\n\t\t\t\'Page Writes/sec\',\r\n\t\t\t\'Readahead Pages/sec\',\r\n\t\t\t\'Lazy Writes/sec\',\r\n\t\t\t\'Ch" +
            "eckpoint Pages/sec\',\r\n\t\t\t\'Page life expectancy\',\r\n\t\t\t\'Log File(s) Size (KB)\',\r\n\t" +
            "\t\t\'Log File(s) Used Size (KB)\',\r\n\t\t\t\'Data File(s) Size (KB)\',\r\n\t\t\t\'Transactions/" +
            "sec\',\r\n\t\t\t\'Write Transactions/sec\',\r\n\t\t\t\'Active Temp Tables\',\r\n\t\t\t\'Temp Tables C" +
            "reation Rate\',\r\n\t\t\t\'Temp Tables For Destruction\',\r\n\t\t\t\'Free Space in tempdb (KB)" +
            "\',\r\n\t\t\t\'Version Store Size (KB)\',\r\n\t\t\t\'Memory Grants Pending\',\r\n\t\t\t\'Free list st" +
            "alls/sec\',\r\n\t\t\t\'Buffer cache hit ratio\',\r\n\t\t\t\'Buffer cache hit ratio base\',\r\n\t\t\t" +
            "\'Backup/Restore Throughput/sec\',\r\n\t\t\t\'Total Server Memory (KB)\',\r\n\t\t\t\'Target Ser" +
            "ver Memory (KB)\',\r\n\t\t\t\'Connection Memory (KB)\',\r\n\t\t\t\'SQL Cache Memory (KB)\',\r\n\t\t" +
            "\t\'Optimizer Memory (KB)\',\r\n\t\t\t\'Log Pool Memory (KB)\',\r\n\t\t\t\'Lock Memory (KB)\',\r\n\t" +
            "\t\t\'Database Cache Memory (KB)\'\r\n\t\t)\r\n\t\t) OR (\r\n\t\t\tinstance_name IN (\'_Total\',\'Co" +
            "lumn store object pool\')\r\n\t\t\tAND counter_name IN (\r\n\t\t\t\t\'Log Flushes/sec\',\r\n\t\t\t\t" +
            "\'Log Flush Wait Time\',\r\n\t\t\t\t\'Lock Timeouts/sec\',\r\n\t\t\t\t\'Number of Deadlocks/sec\'," +
            "\r\n\t\t\t\t\'Lock Waits/sec\',\r\n\t\t\t\t\'Latch Waits/sec\',\r\n\t\t\t\t\'Memory broker clerk size\'," +
            "\r\n\t\t\t\t\'Log Bytes Flushed/sec\',\r\n\t\t\t\t\'Bytes Sent to Replica/sec\',\r\n\t\t\t\t\'Log Send " +
            "Queue\',\r\n\t\t\t\t\'Bytes Sent to Transport/sec\',\r\n\t\t\t\t\'Sends to Replica/sec\',\r\n\t\t\t\t\'B" +
            "ytes Sent to Transport/sec\',\r\n\t\t\t\t\'Sends to Transport/sec\',\r\n\t\t\t\t\'Bytes Received" +
            " from Replica/sec\',\r\n\t\t\t\t\'Receives from Replica/sec\',\r\n\t\t\t\t\'Flow Control Time (m" +
            "s/sec)\',\r\n\t\t\t\t\'Flow Control/sec\',\r\n\t\t\t\t\'Resent Messages/sec\',\r\n\t\t\t\t\'Redone Bytes" +
            "/sec\',\r\n\t\t\t\t\'XTP Memory Used (KB)\',\r\n\t\t\t\t\'Log Pool Cache Misses/sec\',\r\n\t\t\t\t\'Log " +
            "Pool Disk Reads/sec\',\r\n\t\t\t\t\'Log Pool Requests/sec\'\r\n\t\t\t) OR ( \r\n\t\t\t\tobject_name " +
            "= \'SQLServer:Database Replica\'\r\n\t\t\t\tAND counter_name IN (\r\n\t\t\t\t\t\'Log Bytes Recei" +
            "ved/sec\',\r\n\t\t\t\t\t\'Log Apply Pending Queue\',\r\n\t\t\t\t\t\'Redone Bytes/sec\',\r\n\t\t\t\t\t\'Reco" +
            "very Queue\',\r\n\t\t\t\t\t\'Log Apply Ready Queue\'\r\n\t\t\t\t)\r\n\t\t\t\tAND instance_name = \'_Tot" +
            "al\'\r\n\t\t\t)\r\n\t\t) OR (\r\n\t\t\tobject_name = \'SQLServer:Database Replica\'\r\n\t\t\tAND count" +
            "er_name IN (\'Transaction Delay\', \'Mirrored Write Transactions/sec\')\r\n\t\t) OR (\r\n\t" +
            "\t\tobject_name = \'SQLServer:Workload Group Stats\'\r\n\t\t\tAND counter_name IN (\r\n\t\t\t\t" +
            "\'CPU usage %\',\r\n\t\t\t\t\'CPU usage % base\',\r\n\t\t\t\t\'Queued requests\',\r\n\t\t\t\t\'Requests c" +
            "ompleted/sec\',\r\n\t\t\t\t\'Blocked tasks\'\r\n\t\t\t)\r\n\t\t) OR (\r\n\t\t\tobject_name = \'SQLServer" +
            ":Resource Pool Stats\'\r\n\t\t\tAND counter_name IN (\r\n\t\t\t\t\'Active memory grant amount" +
            " (KB)\',\r\n\t\t\t\t\'Disk Read Bytes/sec\',\r\n\t\t\t\t\'Disk Read IO Throttled/sec\',\r\n\t\t\t\t\'Dis" +
            "k Read IO/sec\',\r\n\t\t\t\t\'Disk Write Bytes/sec\',\r\n\t\t\t\t\'Disk Write IO Throttled/sec\'," +
            "\r\n\t\t\t\t\'Disk Write IO/sec\',\r\n\t\t\t\t\'Used memory (KB)\'\r\n\t\t\t)\r\n\t\t) OR object_name IN " +
            "(\r\n\t\t\t\'SQLServer:User Settable\',\r\n\t\t\t\'SQLServer:SQL Errors\'\r\n\t\t)\r\nSELECT\t\'sqlser" +
            "ver_performance\' AS [measurement],\r\n\t\tREPLACE(@@SERVERNAME,\'\\\',\':\') AS [sql_inst" +
            "ance],\r\n\t\tSERVERPROPERTY(\'ServerName\') AS [host],\r\n\t\tpc.object_name AS [object]," +
            "\r\n\t\tpc.counter_name AS [counter],\r\n\t\tCASE pc.instance_name WHEN \'_Total\' THEN \'T" +
            "otal\' ELSE ISNULL(pc.instance_name,\'\') END AS [instance],\r\n\t\tCASE WHEN pc.cntr_t" +
            "ype = 537003264 AND pc1.cntr_value > 0 THEN (pc.cntr_value * 1.0) / (pc1.cntr_va" +
            "lue * 1.0) * 100 ELSE pc.cntr_value END AS [value]\r\nFROM\t@PCounters AS pc\r\n\t\tLEF" +
            "T OUTER JOIN @PCounters AS pc1\r\n\t\t\tON (\r\n\t\t\t\tpc.counter_name = REPLACE(pc1.count" +
            "er_name,\' base\',\'\')\r\n\t\t\t\tOR pc.counter_name = REPLACE(pc1.counter_name,\' base\',\'" +
            " (ms)\')\r\n\t\t\t)\r\n\t\t\tAND pc.object_name = pc1.object_name\r\n\t\t\tAND pc.instance_name " +
            "= pc1.instance_name\r\n\t\t\tAND pc1.counter_name LIKE \'%base\'\r\nWHERE\tpc.counter_name" +
            " NOT LIKE \'% base\'\r\nOPTION( RECOMPILE );")]
        public string PerformanceCounter {
            get {
                return ((string)(this["PerformanceCounter"]));
            }
        }
        
        [global::System.Configuration.ApplicationScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("SELECT\t\r\n\'sqlserver_memory_clerks\' As [measurement],\r\nREPLACE(@@SERVERNAME,\'\\\',\':" +
            "\') AS [sql_instance],\r\nSERVERPROPERTY(\'ServerName\') AS [host],\r\nISNULL(clerk_nam" +
            "es.name,mc.type) AS clerk_type,\r\nSUM(mc.pages_kb) AS size_kb\r\nFROM\r\nsys.dm_os_me" +
            "mory_clerks AS mc WITH (NOLOCK)\r\nLEFT OUTER JOIN ( VALUES\r\n(\'CACHESTORE_BROKERDS" +
            "H\',\'Service Broker Dialog Security Header Cache\'),\r\n(\'CACHESTORE_BROKERKEK\',\'Ser" +
            "vice Broker Key Exchange Key Cache\'),\r\n(\'CACHESTORE_BROKERREADONLY\',\'Service Bro" +
            "ker (Read-Only)\'),\r\n(\'CACHESTORE_BROKERRSB\',\'Service Broker Null Remote Service " +
            "Binding Cache\'),\r\n(\'CACHESTORE_BROKERTBLACS\',\'Broker dormant rowsets\'),\r\n(\'CACHE" +
            "STORE_BROKERTO\',\'Service Broker Transmission Object Cache\'),\r\n(\'CACHESTORE_BROKE" +
            "RUSERCERTLOOKUP\',\'Service Broker user certificates lookup result cache\'),\r\n(\'CAC" +
            "HESTORE_CLRPROC\',\'CLR Procedure Cache\'),\r\n(\'CACHESTORE_CLRUDTINFO\',\'CLR UDT Info" +
            "\'),\r\n(\'CACHESTORE_COLUMNSTOREOBJECTPOOL\',\'Column Store Object Pool\'),\r\n(\'CACHEST" +
            "ORE_CONVPRI\',\'Conversation Priority Cache\'),\r\n(\'CACHESTORE_EVENTS\',\'Event Notifi" +
            "cation Cache\'),\r\n(\'CACHESTORE_FULLTEXTSTOPLIST\',\'Full Text Stoplist Cache\'),\r\n(\'" +
            "CACHESTORE_NOTIF\',\'Notification Store\'),\r\n(\'CACHESTORE_OBJCP\',\'Object Plans\'),\r\n" +
            "(\'CACHESTORE_PHDR\',\'Bound Trees\'),\r\n(\'CACHESTORE_SEARCHPROPERTYLIST\',\'Search Pro" +
            "perty List Cache\'),\r\n(\'CACHESTORE_SEHOBTCOLUMNATTRIBUTE\',\'SE Shared Column Metad" +
            "ata Cache\'),\r\n(\'CACHESTORE_SQLCP\',\'SQL Plans\'),\r\n(\'CACHESTORE_STACKFRAMES\',\'SOS_" +
            "StackFramesStore\'),\r\n(\'CACHESTORE_SYSTEMROWSET\',\'System Rowset Store\'),\r\n(\'CACHE" +
            "STORE_TEMPTABLES\',\'Temporary Tables & Table Variables\'),\r\n(\'CACHESTORE_VIEWDEFIN" +
            "ITIONS\',\'View Definition Cache\'),\r\n(\'CACHESTORE_XML_SELECTIVE_DG\',\'XML DB Cache " +
            "(Selective)\'),\r\n(\'CACHESTORE_XMLDBATTRIBUTE\',\'XML DB Cache (Attribute)\'),\r\n(\'CAC" +
            "HESTORE_XMLDBELEMENT\',\'XML DB Cache (Element)\'),\r\n(\'CACHESTORE_XMLDBTYPE\',\'XML D" +
            "B Cache (Type)\'),\r\n(\'CACHESTORE_XPROC\',\'Extended Stored Procedures\'),\r\n(\'MEMORYC" +
            "LERK_FILETABLE\',\'Memory Clerk (File Table)\'),\r\n(\'MEMORYCLERK_FSCHUNKER\',\'Memory " +
            "Clerk (FS Chunker)\'),\r\n(\'MEMORYCLERK_FULLTEXT\',\'Full Text\'),\r\n(\'MEMORYCLERK_FULL" +
            "TEXT_SHMEM\',\'Full-text IG\'),\r\n(\'MEMORYCLERK_HADR\',\'HADR\'),\r\n(\'MEMORYCLERK_HOST\'," +
            "\'Host\'),\r\n(\'MEMORYCLERK_LANGSVC\',\'Language Service\'),\r\n(\'MEMORYCLERK_LWC\',\'Light" +
            " Weight Cache\'),\r\n(\'MEMORYCLERK_QSRANGEPREFETCH\',\'QS Range Prefetch\'),\r\n(\'MEMORY" +
            "CLERK_SERIALIZATION\',\'Serialization\'),\r\n(\'MEMORYCLERK_SNI\',\'SNI\'),\r\n(\'MEMORYCLER" +
            "K_SOSMEMMANAGER\',\'SOS Memory Manager\'),\r\n(\'MEMORYCLERK_SOSNODE\',\'SOS Node\'),\r\n(\'" +
            "MEMORYCLERK_SOSOS\',\'SOS Memory Clerk\'),\r\n(\'MEMORYCLERK_SQLBUFFERPOOL\',\'Buffer Po" +
            "ol\'),\r\n(\'MEMORYCLERK_SQLCLR\',\'CLR\'),\r\n(\'MEMORYCLERK_SQLCLRASSEMBLY\',\'CLR Assembl" +
            "y\'),\r\n(\'MEMORYCLERK_SQLCONNECTIONPOOL\',\'Connection Pool\'),\r\n(\'MEMORYCLERK_SQLGEN" +
            "ERAL\',\'General\'),\r\n(\'MEMORYCLERK_SQLHTTP\',\'HTTP\'),\r\n(\'MEMORYCLERK_SQLLOGPOOL\',\'L" +
            "og Pool\'),\r\n(\'MEMORYCLERK_SQLOPTIMIZER\',\'SQL Optimizer\'),\r\n(\'MEMORYCLERK_SQLQERE" +
            "SERVATIONS\',\'SQL Reservations\'),\r\n(\'MEMORYCLERK_SQLQUERYCOMPILE\',\'SQL Query Comp" +
            "ile\'),\r\n(\'MEMORYCLERK_SQLQUERYEXEC\',\'SQL Query Exec\'),\r\n(\'MEMORYCLERK_SQLQUERYPL" +
            "AN\',\'SQL Query Plan\'),\r\n(\'MEMORYCLERK_SQLSERVICEBROKER\',\'SQL Service Broker\'),\r\n" +
            "(\'MEMORYCLERK_SQLSERVICEBROKERTRANSPORT\',\'Unified Communication Stack\'),\r\n(\'MEMO" +
            "RYCLERK_SQLSOAP\',\'SQL SOAP\'),\r\n(\'MEMORYCLERK_SQLSOAPSESSIONSTORE\',\'SQL SOAP (Ses" +
            "sion Store)\'),\r\n(\'MEMORYCLERK_SQLSTORENG\',\'SQL Storage Engine\'),\r\n(\'MEMORYCLERK_" +
            "SQLUTILITIES\',\'SQL Utilities\'),\r\n(\'MEMORYCLERK_SQLXML\',\'SQL XML\'),\r\n(\'MEMORYCLER" +
            "K_SQLXP\',\'SQL XP\'),\r\n(\'MEMORYCLERK_TRACE_EVTNOTIF\',\'Trace Event Notification\'),\r" +
            "\n(\'MEMORYCLERK_XE\',\'XE Engine\'),\r\n(\'MEMORYCLERK_XE_BUFFER\',\'XE Buffer\'),\r\n(\'MEMO" +
            "RYCLERK_XTP\',\'In-Memory OLTP\'),\r\n(\'OBJECTSTORE_LBSS\',\'Lbss Cache (Object Store)\'" +
            "),\r\n(\'OBJECTSTORE_LOCK_MANAGER\',\'Lock Manager (Object Store)\'),\r\n(\'OBJECTSTORE_S" +
            "ECAUDIT_EVENT_BUFFER\',\'Audit Event Buffer (Object Store)\'),\r\n(\'OBJECTSTORE_SERVI" +
            "CE_BROKER\',\'Service Broker (Object Store)\'),\r\n(\'OBJECTSTORE_SNI_PACKET\',\'SNI Pac" +
            "ket (Object Store)\'),\r\n(\'OBJECTSTORE_XACT_CACHE\',\'Transactions Cache (Object Sto" +
            "re)\'),\r\n(\'USERSTORE_DBMETADATA\',\'DB Metadata (User Store)\'),\r\n(\'USERSTORE_OBJPER" +
            "M\',\'Object Permissions (User Store)\'),\r\n(\'USERSTORE_SCHEMAMGR\',\'Schema Manager (" +
            "User Store)\'),\r\n(\'USERSTORE_SXC\',\'SXC (User Store)\'),\r\n(\'USERSTORE_TOKENPERM\',\'T" +
            "oken Permissions (User Store)\'),\r\n(\'USERSTORE_QDSSTMT\',\'QDS Statement Buffer (Pr" +
            "e-persist)\'),\r\n(\'CACHESTORE_QDSRUNTIMESTATS\',\'QDS Runtime Stats (Pre-persist)\')," +
            "\r\n(\'CACHESTORE_QDSCONTEXTSETTINGS\',\'QDS Unique Context Settings\'),\r\n(\'MEMORYCLER" +
            "K_QUERYDISKSTORE\',\'QDS General\'),\r\n(\'MEMORYCLERK_QUERYDISKSTORE_HASHMAP\',\'QDS Qu" +
            "ery/Plan Hash Table\')\r\n) AS clerk_names(system_name,name)\r\nON mc.type = clerk_na" +
            "mes.system_name\r\nGROUP BY ISNULL(clerk_names.name,mc.type)\r\nHAVING SUM(pages_kb)" +
            " >= 1024\r\nOPTION( RECOMPILE );")]
        public string MemoryClerk {
            get {
                return ((string)(this["MemoryClerk"]));
            }
        }
        
        [global::System.Configuration.ApplicationScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("SET NOCOUNT ON;\r\nSET TRANSACTION ISOLATION LEVEL READ UNCOMMITTED\r\nIF OBJECT_ID(\'" +
            "tempdb..#baseline\') IS NOT NULL\r\n\tDROP TABLE #baseline;\r\nSELECT\r\n    DB_NAME(mf." +
            "database_id) AS database_name,\r\n    CAST(mf.size AS BIGINT) as database_size_8k_" +
            "pages,\r\n    CAST(mf.max_size AS BIGINT) as database_max_size_8k_pages,\r\n    size" +
            "_on_disk_bytes ,\r\n\ttype_desc as datafile_type,\r\n    GETDATE() AS baselineDate\r\nI" +
            "NTO #baseline\r\nFROM sys.dm_io_virtual_file_stats(NULL, NULL) AS divfs\r\nINNER JOI" +
            "N sys.master_files AS mf ON mf.database_id = divfs.database_id\r\n\tAND mf.file_id " +
            "= divfs.file_id\r\nDECLARE @DynamicPivotQuery AS NVARCHAR(MAX)\r\nDECLARE @ColumnNam" +
            "e AS NVARCHAR(MAX), @ColumnName2 AS NVARCHAR(MAX)\r\nSELECT @ColumnName= ISNULL(@C" +
            "olumnName + \',\',\'\') + QUOTENAME(database_name)\r\nFROM (SELECT DISTINCT database_n" +
            "ame FROM #baseline) AS bl\r\n--Prepare the PIVOT query using the dynamic\r\nSET @Dyn" +
            "amicPivotQuery = N\'\r\nSELECT measurement = \'\'log_size_bytes\'\', sql_instance = REP" +
            "LACE(@@SERVERNAME, \'\'\\\'\', \'\':\'\'), type = \'\'Database size\'\'\r\n, \' + @ColumnName + " +
            "\'  FROM\r\n(\r\nSELECT database_name, size_on_disk_bytes\r\nFROM #baseline\r\nWHERE data" +
            "file_type = \'\'LOG\'\'\r\n) as V\r\nPIVOT(SUM(size_on_disk_bytes) FOR database_name IN " +
            "(\' + @ColumnName + \')) AS PVTTable\r\nUNION ALL\r\nSELECT measurement = \'\'row_size_b" +
            "ytes\'\', sql_instance = REPLACE(@@SERVERNAME, \'\'\\\'\', \'\':\'\'), type = \'\'Database si" +
            "ze\'\'\r\n, \' + @ColumnName + \'  FROM\r\n(\r\nSELECT database_name, size_on_disk_bytes\r\n" +
            "FROM #baseline\r\nWHERE datafile_type = \'\'ROWS\'\'\r\n) as V\r\nPIVOT(SUM(size_on_disk_b" +
            "ytes) FOR database_name IN (\' + @ColumnName + \')) AS PVTTable\r\nUNION ALL\r\nSELECT" +
            " measurement = \'\'row_size_8k_pages\'\', sql_instance = REPLACE(@@SERVERNAME, \'\'\\\'\'" +
            ", \'\':\'\'), type = \'\'Database size\'\'\r\n, \' + @ColumnName + \'  FROM\r\n(\r\nSELECT datab" +
            "ase_name, database_size_8k_pages\r\nFROM #baseline\r\nWHERE datafile_type = \'\'ROWS\'\'" +
            "\r\n) as V\r\nPIVOT(SUM(database_size_8k_pages) FOR database_name IN (\' + @ColumnNam" +
            "e + \')) AS PVTTable\r\nUNION ALL\r\nSELECT measurement = \'\'log_size_8k_pages\'\', sql_" +
            "instance = REPLACE(@@SERVERNAME, \'\'\\\'\', \'\':\'\'), type = \'\'Database size\'\'\r\n, \' + " +
            "@ColumnName + \'  FROM\r\n(\r\nSELECT database_name, database_size_8k_pages\r\nFROM #ba" +
            "seline\r\nWHERE datafile_type = \'\'LOG\'\'\r\n) as V\r\nPIVOT(SUM(database_size_8k_pages)" +
            " FOR database_name IN (\' + @ColumnName + \')) AS PVTTable\r\nUNION ALL\r\nSELECT meas" +
            "urement = \'\'row_max_size_8k_pages\'\', sql_instance = REPLACE(@@SERVERNAME, \'\'\\\'\'," +
            " \'\':\'\'), type = \'\'Database size\'\'\r\n, \' + @ColumnName + \'  FROM\r\n(\r\nSELECT databa" +
            "se_name, database_max_size_8k_pages\r\nFROM #baseline\r\nWHERE datafile_type = \'\'ROW" +
            "S\'\'\r\n) as V\r\nPIVOT(SUM(database_max_size_8k_pages) FOR database_name IN (\' + @Co" +
            "lumnName + \')) AS PVTTable\r\nUNION ALL\r\nSELECT measurement = \'\'log_max_size_8k_pa" +
            "ges\'\', sql_instance = REPLACE(@@SERVERNAME, \'\'\\\'\', \'\':\'\'), type = \'\'Database siz" +
            "e\'\'\r\n, \' + @ColumnName + \'  FROM\r\n(\r\nSELECT database_name, database_max_size_8k_" +
            "pages\r\nFROM #baseline\r\nWHERE datafile_type = \'\'LOG\'\'\r\n) as V\r\nPIVOT(SUM(database" +
            "_max_size_8k_pages) FOR database_name IN (\' + @ColumnName + \')) AS PVTTable\r\n\'\r\n" +
            "--PRINT @DynamicPivotQuery\r\nEXEC sp_executesql @DynamicPivotQuery;")]
        public string DatabaseSize {
            get {
                return ((string)(this["DatabaseSize"]));
            }
        }
        
        [global::System.Configuration.ApplicationScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute(@"SELECT
'sqlserver_database_io' As [measurement],
REPLACE(@@SERVERNAME,'\',':') AS [sql_instance],
SERVERPROPERTY('ServerName') AS [host],
DB_NAME([vfs].[database_id]) [database_name],
vfs.io_stall_read_ms AS read_latency_ms,
vfs.num_of_reads AS reads,
vfs.num_of_bytes_read AS read_bytes,
vfs.io_stall_write_ms AS write_latency_ms,
vfs.num_of_writes AS writes,
vfs.num_of_bytes_written AS write_bytes,
CASE WHEN vfs.file_id = 2 THEN 'LOG' ELSE 'ROWS' END AS file_type
FROM
[sys].[dm_io_virtual_file_stats](NULL,NULL) AS vfs
OPTION( RECOMPILE );")]
        public string DatabaseIO {
            get {
                return ((string)(this["DatabaseIO"]));
            }
        }
        
        [global::System.Configuration.ApplicationScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("SELECT\r\n\'sqlserver_waitstats\' AS [measurement],\r\nREPLACE(@@SERVERNAME,\'\\\',\':\') AS" +
            " [sql_instance],\r\nSERVERPROPERTY(\'ServerName\') AS [host],\r\nws.wait_type,\r\nwait_t" +
            "ime_ms,\r\nwait_time_ms - signal_wait_time_ms AS [resource_wait_ms],\r\nsignal_wait_" +
            "time_ms,\r\nmax_wait_time_ms,\r\nwaiting_tasks_count,\r\nISNULL(wc.wait_category,\'OTHE" +
            "R\') AS [wait_category]\r\nFROM\r\nsys.dm_os_wait_stats AS ws WITH (NOLOCK)\r\nLEFT OUT" +
            "ER JOIN ( VALUES\r\n(\'ASYNC_IO_COMPLETION\',\'Other Disk IO\'),\r\n(\'ASYNC_NETWORK_IO\'," +
            "\'Network IO\'),\r\n(\'BACKUPIO\',\'Other Disk IO\'),\r\n(\'BROKER_CONNECTION_RECEIVE_TASK\'" +
            ",\'Service Broker\'),\r\n(\'BROKER_DISPATCHER\',\'Service Broker\'),\r\n(\'BROKER_ENDPOINT_" +
            "STATE_MUTEX\',\'Service Broker\'),\r\n(\'BROKER_EVENTHANDLER\',\'Service Broker\'),\r\n(\'BR" +
            "OKER_FORWARDER\',\'Service Broker\'),\r\n(\'BROKER_INIT\',\'Service Broker\'),\r\n(\'BROKER_" +
            "MASTERSTART\',\'Service Broker\'),\r\n(\'BROKER_RECEIVE_WAITFOR\',\'User Wait\'),\r\n(\'BROK" +
            "ER_REGISTERALLENDPOINTS\',\'Service Broker\'),\r\n(\'BROKER_SERVICE\',\'Service Broker\')" +
            ",\r\n(\'BROKER_SHUTDOWN\',\'Service Broker\'),\r\n(\'BROKER_START\',\'Service Broker\'),\r\n(\'" +
            "BROKER_TASK_SHUTDOWN\',\'Service Broker\'),\r\n(\'BROKER_TASK_STOP\',\'Service Broker\')," +
            "\r\n(\'BROKER_TASK_SUBMIT\',\'Service Broker\'),\r\n(\'BROKER_TO_FLUSH\',\'Service Broker\')" +
            ",\r\n(\'BROKER_TRANSMISSION_OBJECT\',\'Service Broker\'),\r\n(\'BROKER_TRANSMISSION_TABLE" +
            "\',\'Service Broker\'),\r\n(\'BROKER_TRANSMISSION_WORK\',\'Service Broker\'),\r\n(\'BROKER_T" +
            "RANSMITTER\',\'Service Broker\'),\r\n(\'CHECKPOINT_QUEUE\',\'Idle\'),\r\n(\'CHKPT\',\'Tran Log" +
            " IO\'),\r\n(\'CLR_AUTO_EVENT\',\'SQL CLR\'),\r\n(\'CLR_CRST\',\'SQL CLR\'),\r\n(\'CLR_JOIN\',\'SQL" +
            " CLR\'),\r\n(\'CLR_MANUAL_EVENT\',\'SQL CLR\'),\r\n(\'CLR_MEMORY_SPY\',\'SQL CLR\'),\r\n(\'CLR_M" +
            "ONITOR\',\'SQL CLR\'),\r\n(\'CLR_RWLOCK_READER\',\'SQL CLR\'),\r\n(\'CLR_RWLOCK_WRITER\',\'SQL" +
            " CLR\'),\r\n(\'CLR_SEMAPHORE\',\'SQL CLR\'),\r\n(\'CLR_TASK_START\',\'SQL CLR\'),\r\n(\'CLRHOST_" +
            "STATE_ACCESS\',\'SQL CLR\'),\r\n(\'CMEMPARTITIONED\',\'Memory\'),\r\n(\'CMEMTHREAD\',\'Memory\'" +
            "),\r\n(\'CXPACKET\',\'Parallelism\'),\r\n(\'DBMIRROR_DBM_EVENT\',\'Mirroring\'),\r\n(\'DBMIRROR" +
            "_DBM_MUTEX\',\'Mirroring\'),\r\n(\'DBMIRROR_EVENTS_QUEUE\',\'Mirroring\'),\r\n(\'DBMIRROR_SE" +
            "ND\',\'Mirroring\'),\r\n(\'DBMIRROR_WORKER_QUEUE\',\'Mirroring\'),\r\n(\'DBMIRRORING_CMD\',\'M" +
            "irroring\'),\r\n(\'DTC\',\'Transaction\'),\r\n(\'DTC_ABORT_REQUEST\',\'Transaction\'),\r\n(\'DTC" +
            "_RESOLVE\',\'Transaction\'),\r\n(\'DTC_STATE\',\'Transaction\'),\r\n(\'DTC_TMDOWN_REQUEST\',\'" +
            "Transaction\'),\r\n(\'DTC_WAITFOR_OUTCOME\',\'Transaction\'),\r\n(\'DTCNEW_ENLIST\',\'Transa" +
            "ction\'),\r\n(\'DTCNEW_PREPARE\',\'Transaction\'),\r\n(\'DTCNEW_RECOVERY\',\'Transaction\'),\r" +
            "\n(\'DTCNEW_TM\',\'Transaction\'),\r\n(\'DTCNEW_TRANSACTION_ENLISTMENT\',\'Transaction\'),\r" +
            "\n(\'DTCPNTSYNC\',\'Transaction\'),\r\n(\'EE_PMOLOCK\',\'Memory\'),\r\n(\'EXCHANGE\',\'Paralleli" +
            "sm\'),\r\n(\'EXTERNAL_SCRIPT_NETWORK_IOF\',\'Network IO\'),\r\n(\'FCB_REPLICA_READ\',\'Repli" +
            "cation\'),\r\n(\'FCB_REPLICA_WRITE\',\'Replication\'),\r\n(\'FT_COMPROWSET_RWLOCK\',\'Full T" +
            "ext Search\'),\r\n(\'FT_IFTS_RWLOCK\',\'Full Text Search\'),\r\n(\'FT_IFTS_SCHEDULER_IDLE_" +
            "WAIT\',\'Idle\'),\r\n(\'FT_IFTSHC_MUTEX\',\'Full Text Search\'),\r\n(\'FT_IFTSISM_MUTEX\',\'Fu" +
            "ll Text Search\'),\r\n(\'FT_MASTER_MERGE\',\'Full Text Search\'),\r\n(\'FT_MASTER_MERGE_CO" +
            "ORDINATOR\',\'Full Text Search\'),\r\n(\'FT_METADATA_MUTEX\',\'Full Text Search\'),\r\n(\'FT" +
            "_PROPERTYLIST_CACHE\',\'Full Text Search\'),\r\n(\'FT_RESTART_CRAWL\',\'Full Text Search" +
            "\'),\r\n(\'FULLTEXT GATHERER\',\'Full Text Search\'),\r\n(\'HADR_AG_MUTEX\',\'Replication\')," +
            "\r\n(\'HADR_AR_CRITICAL_SECTION_ENTRY\',\'Replication\'),\r\n(\'HADR_AR_MANAGER_MUTEX\',\'R" +
            "eplication\'),\r\n(\'HADR_AR_UNLOAD_COMPLETED\',\'Replication\'),\r\n(\'HADR_ARCONTROLLER_" +
            "NOTIFICATIONS_SUBSCRIBER_LIST\',\'Replication\'),\r\n(\'HADR_BACKUP_BULK_LOCK\',\'Replic" +
            "ation\'),\r\n(\'HADR_BACKUP_QUEUE\',\'Replication\'),\r\n(\'HADR_CLUSAPI_CALL\',\'Replicatio" +
            "n\'),\r\n(\'HADR_COMPRESSED_CACHE_SYNC\',\'Replication\'),\r\n(\'HADR_CONNECTIVITY_INFO\',\'" +
            "Replication\'),\r\n(\'HADR_DATABASE_FLOW_CONTROL\',\'Replication\'),\r\n(\'HADR_DATABASE_V" +
            "ERSIONING_STATE\',\'Replication\'),\r\n(\'HADR_DATABASE_WAIT_FOR_RECOVERY\',\'Replicatio" +
            "n\'),\r\n(\'HADR_DATABASE_WAIT_FOR_RESTART\',\'Replication\'),\r\n(\'HADR_DATABASE_WAIT_FO" +
            "R_TRANSITION_TO_VERSIONING\',\'Replication\'),\r\n(\'HADR_DB_COMMAND\',\'Replication\'),\r" +
            "\n(\'HADR_DB_OP_COMPLETION_SYNC\',\'Replication\'),\r\n(\'HADR_DB_OP_START_SYNC\',\'Replic" +
            "ation\'),\r\n(\'HADR_DBR_SUBSCRIBER\',\'Replication\'),\r\n(\'HADR_DBR_SUBSCRIBER_FILTER_L" +
            "IST\',\'Replication\'),\r\n(\'HADR_DBSEEDING\',\'Replication\'),\r\n(\'HADR_DBSEEDING_LIST\'," +
            "\'Replication\'),\r\n(\'HADR_DBSTATECHANGE_SYNC\',\'Replication\'),\r\n(\'HADR_FABRIC_CALLB" +
            "ACK\',\'Replication\'),\r\n(\'HADR_FILESTREAM_BLOCK_FLUSH\',\'Replication\'),\r\n(\'HADR_FIL" +
            "ESTREAM_FILE_CLOSE\',\'Replication\'),\r\n(\'HADR_FILESTREAM_FILE_REQUEST\',\'Replicatio" +
            "n\'),\r\n(\'HADR_FILESTREAM_IOMGR\',\'Replication\'),\r\n(\'HADR_FILESTREAM_IOMGR_IOCOMPLE" +
            "TION\',\'Replication\'),\r\n(\'HADR_FILESTREAM_MANAGER\',\'Replication\'),\r\n(\'HADR_FILEST" +
            "REAM_PREPROC\',\'Replication\'),\r\n(\'HADR_GROUP_COMMIT\',\'Replication\'),\r\n(\'HADR_LOGC" +
            "APTURE_SYNC\',\'Replication\'),\r\n(\'HADR_LOGCAPTURE_WAIT\',\'Replication\'),\r\n(\'HADR_LO" +
            "GPROGRESS_SYNC\',\'Replication\'),\r\n(\'HADR_NOTIFICATION_DEQUEUE\',\'Replication\'),\r\n(" +
            "\'HADR_NOTIFICATION_WORKER_EXCLUSIVE_ACCESS\',\'Replication\'),\r\n(\'HADR_NOTIFICATION" +
            "_WORKER_STARTUP_SYNC\',\'Replication\'),\r\n(\'HADR_NOTIFICATION_WORKER_TERMINATION_SY" +
            "NC\',\'Replication\'),\r\n(\'HADR_PARTNER_SYNC\',\'Replication\'),\r\n(\'HADR_READ_ALL_NETWO" +
            "RKS\',\'Replication\'),\r\n(\'HADR_RECOVERY_WAIT_FOR_CONNECTION\',\'Replication\'),\r\n(\'HA" +
            "DR_RECOVERY_WAIT_FOR_UNDO\',\'Replication\'),\r\n(\'HADR_REPLICAINFO_SYNC\',\'Replicatio" +
            "n\'),\r\n(\'HADR_SEEDING_CANCELLATION\',\'Replication\'),\r\n(\'HADR_SEEDING_FILE_LIST\',\'R" +
            "eplication\'),\r\n(\'HADR_SEEDING_LIMIT_BACKUPS\',\'Replication\'),\r\n(\'HADR_SEEDING_SYN" +
            "C_COMPLETION\',\'Replication\'),\r\n(\'HADR_SEEDING_TIMEOUT_TASK\',\'Replication\'),\r\n(\'H" +
            "ADR_SEEDING_WAIT_FOR_COMPLETION\',\'Replication\'),\r\n(\'HADR_SYNC_COMMIT\',\'Replicati" +
            "on\'),\r\n(\'HADR_SYNCHRONIZING_THROTTLE\',\'Replication\'),\r\n(\'HADR_TDS_LISTENER_SYNC\'" +
            ",\'Replication\'),\r\n(\'HADR_TDS_LISTENER_SYNC_PROCESSING\',\'Replication\'),\r\n(\'HADR_T" +
            "HROTTLE_LOG_RATE_GOVERNOR\',\'Log Rate Governor\'),\r\n(\'HADR_TIMER_TASK\',\'Replicatio" +
            "n\'),\r\n(\'HADR_TRANSPORT_DBRLIST\',\'Replication\'),\r\n(\'HADR_TRANSPORT_FLOW_CONTROL\'," +
            "\'Replication\'),\r\n(\'HADR_TRANSPORT_SESSION\',\'Replication\'),\r\n(\'HADR_WORK_POOL\',\'R" +
            "eplication\'),\r\n(\'HADR_WORK_QUEUE\',\'Replication\'),\r\n(\'HADR_XRF_STACK_ACCESS\',\'Rep" +
            "lication\'),\r\n(\'INSTANCE_LOG_RATE_GOVERNOR\',\'Log Rate Governor\'),\r\n(\'IO_COMPLETIO" +
            "N\',\'Other Disk IO\'),\r\n(\'IO_QUEUE_LIMIT\',\'Other Disk IO\'),\r\n(\'IO_RETRY\',\'Other Di" +
            "sk IO\'),\r\n(\'LATCH_DT\',\'Latch\'),\r\n(\'LATCH_EX\',\'Latch\'),\r\n(\'LATCH_KP\',\'Latch\'),\r\n(" +
            "\'LATCH_NL\',\'Latch\'),\r\n(\'LATCH_SH\',\'Latch\'),\r\n(\'LATCH_UP\',\'Latch\'),\r\n(\'LAZYWRITER" +
            "_SLEEP\',\'Idle\'),\r\n(\'LCK_M_BU\',\'Lock\'),\r\n(\'LCK_M_BU_ABORT_BLOCKERS\',\'Lock\'),\r\n(\'L" +
            "CK_M_BU_LOW_PRIORITY\',\'Lock\'),\r\n(\'LCK_M_IS\',\'Lock\'),\r\n(\'LCK_M_IS_ABORT_BLOCKERS\'" +
            ",\'Lock\'),\r\n(\'LCK_M_IS_LOW_PRIORITY\',\'Lock\'),\r\n(\'LCK_M_IU\',\'Lock\'),\r\n(\'LCK_M_IU_A" +
            "BORT_BLOCKERS\',\'Lock\'),\r\n(\'LCK_M_IU_LOW_PRIORITY\',\'Lock\'),\r\n(\'LCK_M_IX\',\'Lock\')," +
            "\r\n(\'LCK_M_IX_ABORT_BLOCKERS\',\'Lock\'),\r\n(\'LCK_M_IX_LOW_PRIORITY\',\'Lock\'),\r\n(\'LCK_" +
            "M_RIn_NL\',\'Lock\'),\r\n(\'LCK_M_RIn_NL_ABORT_BLOCKERS\',\'Lock\'),\r\n(\'LCK_M_RIn_NL_LOW_" +
            "PRIORITY\',\'Lock\'),\r\n(\'LCK_M_RIn_S\',\'Lock\'),\r\n(\'LCK_M_RIn_S_ABORT_BLOCKERS\',\'Lock" +
            "\'),\r\n(\'LCK_M_RIn_S_LOW_PRIORITY\',\'Lock\'),\r\n(\'LCK_M_RIn_U\',\'Lock\'),\r\n(\'LCK_M_RIn_" +
            "U_ABORT_BLOCKERS\',\'Lock\'),\r\n(\'LCK_M_RIn_U_LOW_PRIORITY\',\'Lock\'),\r\n(\'LCK_M_RIn_X\'" +
            ",\'Lock\'),\r\n(\'LCK_M_RIn_X_ABORT_BLOCKERS\',\'Lock\'),\r\n(\'LCK_M_RIn_X_LOW_PRIORITY\',\'" +
            "Lock\'),\r\n(\'LCK_M_RS_S\',\'Lock\'),\r\n(\'LCK_M_RS_S_ABORT_BLOCKERS\',\'Lock\'),\r\n(\'LCK_M_" +
            "RS_S_LOW_PRIORITY\',\'Lock\'),\r\n(\'LCK_M_RS_U\',\'Lock\'),\r\n(\'LCK_M_RS_U_ABORT_BLOCKERS" +
            "\',\'Lock\'),\r\n(\'LCK_M_RS_U_LOW_PRIORITY\',\'Lock\'),\r\n(\'LCK_M_RX_S\',\'Lock\'),\r\n(\'LCK_M" +
            "_RX_S_ABORT_BLOCKERS\',\'Lock\'),\r\n(\'LCK_M_RX_S_LOW_PRIORITY\',\'Lock\'),\r\n(\'LCK_M_RX_" +
            "U\',\'Lock\'),\r\n(\'LCK_M_RX_U_ABORT_BLOCKERS\',\'Lock\'),\r\n(\'LCK_M_RX_U_LOW_PRIORITY\',\'" +
            "Lock\'),\r\n(\'LCK_M_RX_X\',\'Lock\'),\r\n(\'LCK_M_RX_X_ABORT_BLOCKERS\',\'Lock\'),\r\n(\'LCK_M_" +
            "RX_X_LOW_PRIORITY\',\'Lock\'),\r\n(\'LCK_M_S\',\'Lock\'),\r\n(\'LCK_M_S_ABORT_BLOCKERS\',\'Loc" +
            "k\'),\r\n(\'LCK_M_S_LOW_PRIORITY\',\'Lock\'),\r\n(\'LCK_M_SCH_M\',\'Lock\'),\r\n(\'LCK_M_SCH_M_A" +
            "BORT_BLOCKERS\',\'Lock\'),\r\n(\'LCK_M_SCH_M_LOW_PRIORITY\',\'Lock\'),\r\n(\'LCK_M_SCH_S\',\'L" +
            "ock\'),\r\n(\'LCK_M_SCH_S_ABORT_BLOCKERS\',\'Lock\'),\r\n(\'LCK_M_SCH_S_LOW_PRIORITY\',\'Loc" +
            "k\'),\r\n(\'LCK_M_SIU\',\'Lock\'),\r\n(\'LCK_M_SIU_ABORT_BLOCKERS\',\'Lock\'),\r\n(\'LCK_M_SIU_L" +
            "OW_PRIORITY\',\'Lock\'),\r\n(\'LCK_M_SIX\',\'Lock\'),\r\n(\'LCK_M_SIX_ABORT_BLOCKERS\',\'Lock\'" +
            "),\r\n(\'LCK_M_SIX_LOW_PRIORITY\',\'Lock\'),\r\n(\'LCK_M_U\',\'Lock\'),\r\n(\'LCK_M_U_ABORT_BLO" +
            "CKERS\',\'Lock\'),\r\n(\'LCK_M_U_LOW_PRIORITY\',\'Lock\'),\r\n(\'LCK_M_UIX\',\'Lock\'),\r\n(\'LCK_" +
            "M_UIX_ABORT_BLOCKERS\',\'Lock\'),\r\n(\'LCK_M_UIX_LOW_PRIORITY\',\'Lock\'),\r\n(\'LCK_M_X\',\'" +
            "Lock\'),\r\n(\'LCK_M_X_ABORT_BLOCKERS\',\'Lock\'),\r\n(\'LCK_M_X_LOW_PRIORITY\',\'Lock\'),\r\n(" +
            "\'LOGBUFFER\',\'Tran Log IO\'),\r\n(\'LOGMGR\',\'Tran Log IO\'),\r\n(\'LOGMGR_FLUSH\',\'Tran Lo" +
            "g IO\'),\r\n(\'LOGMGR_PMM_LOG\',\'Tran Log IO\'),\r\n(\'LOGMGR_QUEUE\',\'Idle\'),\r\n(\'LOGMGR_R" +
            "ESERVE_APPEND\',\'Tran Log IO\'),\r\n(\'MEMORY_ALLOCATION_EXT\',\'Memory\'),\r\n(\'MEMORY_GR" +
            "ANT_UPDATE\',\'Memory\'),\r\n(\'MSQL_XACT_MGR_MUTEX\',\'Transaction\'),\r\n(\'MSQL_XACT_MUTE" +
            "X\',\'Transaction\'),\r\n(\'MSSEARCH\',\'Full Text Search\'),\r\n(\'NET_WAITFOR_PACKET\',\'Net" +
            "work IO\'),\r\n(\'ONDEMAND_TASK_QUEUE\',\'Idle\'),\r\n(\'PAGEIOLATCH_DT\',\'Buffer IO\'),\r\n(\'" +
            "PAGEIOLATCH_EX\',\'Buffer IO\'),\r\n(\'PAGEIOLATCH_KP\',\'Buffer IO\'),\r\n(\'PAGEIOLATCH_NL" +
            "\',\'Buffer IO\'),\r\n(\'PAGEIOLATCH_SH\',\'Buffer IO\'),\r\n(\'PAGEIOLATCH_UP\',\'Buffer IO\')" +
            ",\r\n(\'PAGELATCH_DT\',\'Buffer Latch\'),\r\n(\'PAGELATCH_EX\',\'Buffer Latch\'),\r\n(\'PAGELAT" +
            "CH_KP\',\'Buffer Latch\'),\r\n(\'PAGELATCH_NL\',\'Buffer Latch\'),\r\n(\'PAGELATCH_SH\',\'Buff" +
            "er Latch\'),\r\n(\'PAGELATCH_UP\',\'Buffer Latch\'),\r\n(\'POOL_LOG_RATE_GOVERNOR\',\'Log Ra" +
            "te Governor\'),\r\n(\'PREEMPTIVE_ABR\',\'Preemptive\'),\r\n(\'PREEMPTIVE_CLOSEBACKUPMEDIA\'" +
            ",\'Preemptive\'),\r\n(\'PREEMPTIVE_CLOSEBACKUPTAPE\',\'Preemptive\'),\r\n(\'PREEMPTIVE_CLOS" +
            "EBACKUPVDIDEVICE\',\'Preemptive\'),\r\n(\'PREEMPTIVE_CLUSAPI_CLUSTERRESOURCECONTROL\',\'" +
            "Preemptive\'),\r\n(\'PREEMPTIVE_COM_COCREATEINSTANCE\',\'Preemptive\'),\r\n(\'PREEMPTIVE_C" +
            "OM_COGETCLASSOBJECT\',\'Preemptive\'),\r\n(\'PREEMPTIVE_COM_CREATEACCESSOR\',\'Preemptiv" +
            "e\'),\r\n(\'PREEMPTIVE_COM_DELETEROWS\',\'Preemptive\'),\r\n(\'PREEMPTIVE_COM_GETCOMMANDTE" +
            "XT\',\'Preemptive\'),\r\n(\'PREEMPTIVE_COM_GETDATA\',\'Preemptive\'),\r\n(\'PREEMPTIVE_COM_G" +
            "ETNEXTROWS\',\'Preemptive\'),\r\n(\'PREEMPTIVE_COM_GETRESULT\',\'Preemptive\'),\r\n(\'PREEMP" +
            "TIVE_COM_GETROWSBYBOOKMARK\',\'Preemptive\'),\r\n(\'PREEMPTIVE_COM_LBFLUSH\',\'Preemptiv" +
            "e\'),\r\n(\'PREEMPTIVE_COM_LBLOCKREGION\',\'Preemptive\'),\r\n(\'PREEMPTIVE_COM_LBREADAT\'," +
            "\'Preemptive\'),\r\n(\'PREEMPTIVE_COM_LBSETSIZE\',\'Preemptive\'),\r\n(\'PREEMPTIVE_COM_LBS" +
            "TAT\',\'Preemptive\'),\r\n(\'PREEMPTIVE_COM_LBUNLOCKREGION\',\'Preemptive\'),\r\n(\'PREEMPTI" +
            "VE_COM_LBWRITEAT\',\'Preemptive\'),\r\n(\'PREEMPTIVE_COM_QUERYINTERFACE\',\'Preemptive\')" +
            ",\r\n(\'PREEMPTIVE_COM_RELEASE\',\'Preemptive\'),\r\n(\'PREEMPTIVE_COM_RELEASEACCESSOR\',\'" +
            "Preemptive\'),\r\n(\'PREEMPTIVE_COM_RELEASEROWS\',\'Preemptive\'),\r\n(\'PREEMPTIVE_COM_RE" +
            "LEASESESSION\',\'Preemptive\'),\r\n(\'PREEMPTIVE_COM_RESTARTPOSITION\',\'Preemptive\'),\r\n" +
            "(\'PREEMPTIVE_COM_SEQSTRMREAD\',\'Preemptive\'),\r\n(\'PREEMPTIVE_COM_SEQSTRMREADANDWRI" +
            "TE\',\'Preemptive\'),\r\n(\'PREEMPTIVE_COM_SETDATAFAILURE\',\'Preemptive\'),\r\n(\'PREEMPTIV" +
            "E_COM_SETPARAMETERINFO\',\'Preemptive\'),\r\n(\'PREEMPTIVE_COM_SETPARAMETERPROPERTIES\'" +
            ",\'Preemptive\'),\r\n(\'PREEMPTIVE_COM_STRMLOCKREGION\',\'Preemptive\'),\r\n(\'PREEMPTIVE_C" +
            "OM_STRMSEEKANDREAD\',\'Preemptive\'),\r\n(\'PREEMPTIVE_COM_STRMSEEKANDWRITE\',\'Preempti" +
            "ve\'),\r\n(\'PREEMPTIVE_COM_STRMSETSIZE\',\'Preemptive\'),\r\n(\'PREEMPTIVE_COM_STRMSTAT\'," +
            "\'Preemptive\'),\r\n(\'PREEMPTIVE_COM_STRMUNLOCKREGION\',\'Preemptive\'),\r\n(\'PREEMPTIVE_" +
            "CONSOLEWRITE\',\'Preemptive\'),\r\n(\'PREEMPTIVE_CREATEPARAM\',\'Preemptive\'),\r\n(\'PREEMP" +
            "TIVE_DEBUG\',\'Preemptive\'),\r\n(\'PREEMPTIVE_DFSADDLINK\',\'Preemptive\'),\r\n(\'PREEMPTIV" +
            "E_DFSLINKEXISTCHECK\',\'Preemptive\'),\r\n(\'PREEMPTIVE_DFSLINKHEALTHCHECK\',\'Preemptiv" +
            "e\'),\r\n(\'PREEMPTIVE_DFSREMOVELINK\',\'Preemptive\'),\r\n(\'PREEMPTIVE_DFSREMOVEROOT\',\'P" +
            "reemptive\'),\r\n(\'PREEMPTIVE_DFSROOTFOLDERCHECK\',\'Preemptive\'),\r\n(\'PREEMPTIVE_DFSR" +
            "OOTINIT\',\'Preemptive\'),\r\n(\'PREEMPTIVE_DFSROOTSHARECHECK\',\'Preemptive\'),\r\n(\'PREEM" +
            "PTIVE_DTC_ABORT\',\'Preemptive\'),\r\n(\'PREEMPTIVE_DTC_ABORTREQUESTDONE\',\'Preemptive\'" +
            "),\r\n(\'PREEMPTIVE_DTC_BEGINTRANSACTION\',\'Preemptive\'),\r\n(\'PREEMPTIVE_DTC_COMMITRE" +
            "QUESTDONE\',\'Preemptive\'),\r\n(\'PREEMPTIVE_DTC_ENLIST\',\'Preemptive\'),\r\n(\'PREEMPTIVE" +
            "_DTC_PREPAREREQUESTDONE\',\'Preemptive\'),\r\n(\'PREEMPTIVE_FILESIZEGET\',\'Preemptive\')" +
            ",\r\n(\'PREEMPTIVE_FSAOLEDB_ABORTTRANSACTION\',\'Preemptive\'),\r\n(\'PREEMPTIVE_FSAOLEDB" +
            "_COMMITTRANSACTION\',\'Preemptive\'),\r\n(\'PREEMPTIVE_FSAOLEDB_STARTTRANSACTION\',\'Pre" +
            "emptive\'),\r\n(\'PREEMPTIVE_FSRECOVER_UNCONDITIONALUNDO\',\'Preemptive\'),\r\n(\'PREEMPTI" +
            "VE_GETRMINFO\',\'Preemptive\'),\r\n(\'PREEMPTIVE_HADR_LEASE_MECHANISM\',\'Preemptive\'),\r" +
            "\n(\'PREEMPTIVE_HTTP_EVENT_WAIT\',\'Preemptive\'),\r\n(\'PREEMPTIVE_HTTP_REQUEST\',\'Preem" +
            "ptive\'),\r\n(\'PREEMPTIVE_LOCKMONITOR\',\'Preemptive\'),\r\n(\'PREEMPTIVE_MSS_RELEASE\',\'P" +
            "reemptive\'),\r\n(\'PREEMPTIVE_ODBCOPS\',\'Preemptive\'),\r\n(\'PREEMPTIVE_OLE_UNINIT\',\'Pr" +
            "eemptive\'),\r\n(\'PREEMPTIVE_OLEDB_ABORTORCOMMITTRAN\',\'Preemptive\'),\r\n(\'PREEMPTIVE_" +
            "OLEDB_ABORTTRAN\',\'Preemptive\'),\r\n(\'PREEMPTIVE_OLEDB_GETDATASOURCE\',\'Preemptive\')" +
            ",\r\n(\'PREEMPTIVE_OLEDB_GETLITERALINFO\',\'Preemptive\'),\r\n(\'PREEMPTIVE_OLEDB_GETPROP" +
            "ERTIES\',\'Preemptive\'),\r\n(\'PREEMPTIVE_OLEDB_GETPROPERTYINFO\',\'Preemptive\'),\r\n(\'PR" +
            "EEMPTIVE_OLEDB_GETSCHEMALOCK\',\'Preemptive\'),\r\n(\'PREEMPTIVE_OLEDB_JOINTRANSACTION" +
            "\',\'Preemptive\'),\r\n(\'PREEMPTIVE_OLEDB_RELEASE\',\'Preemptive\'),\r\n(\'PREEMPTIVE_OLEDB" +
            "_SETPROPERTIES\',\'Preemptive\'),\r\n(\'PREEMPTIVE_OLEDBOPS\',\'Preemptive\'),\r\n(\'PREEMPT" +
            "IVE_OS_ACCEPTSECURITYCONTEXT\',\'Preemptive\'),\r\n(\'PREEMPTIVE_OS_ACQUIRECREDENTIALS" +
            "HANDLE\',\'Preemptive\'),\r\n(\'PREEMPTIVE_OS_AUTHENTICATIONOPS\',\'Preemptive\'),\r\n(\'PRE" +
            "EMPTIVE_OS_AUTHORIZATIONOPS\',\'Preemptive\'),\r\n(\'PREEMPTIVE_OS_AUTHZGETINFORMATION" +
            "FROMCONTEXT\',\'Preemptive\'),\r\n(\'PREEMPTIVE_OS_AUTHZINITIALIZECONTEXTFROMSID\',\'Pre" +
            "emptive\'),\r\n(\'PREEMPTIVE_OS_AUTHZINITIALIZERESOURCEMANAGER\',\'Preemptive\'),\r\n(\'PR" +
            "EEMPTIVE_OS_BACKUPREAD\',\'Preemptive\'),\r\n(\'PREEMPTIVE_OS_CLOSEHANDLE\',\'Preemptive" +
            "\'),\r\n(\'PREEMPTIVE_OS_CLUSTEROPS\',\'Preemptive\'),\r\n(\'PREEMPTIVE_OS_COMOPS\',\'Preemp" +
            "tive\'),\r\n(\'PREEMPTIVE_OS_COMPLETEAUTHTOKEN\',\'Preemptive\'),\r\n(\'PREEMPTIVE_OS_COPY" +
            "FILE\',\'Preemptive\'),\r\n(\'PREEMPTIVE_OS_CREATEDIRECTORY\',\'Preemptive\'),\r\n(\'PREEMPT" +
            "IVE_OS_CREATEFILE\',\'Preemptive\'),\r\n(\'PREEMPTIVE_OS_CRYPTACQUIRECONTEXT\',\'Preempt" +
            "ive\'),\r\n(\'PREEMPTIVE_OS_CRYPTIMPORTKEY\',\'Preemptive\'),\r\n(\'PREEMPTIVE_OS_CRYPTOPS" +
            "\',\'Preemptive\'),\r\n(\'PREEMPTIVE_OS_DECRYPTMESSAGE\',\'Preemptive\'),\r\n(\'PREEMPTIVE_O" +
            "S_DELETEFILE\',\'Preemptive\'),\r\n(\'PREEMPTIVE_OS_DELETESECURITYCONTEXT\',\'Preemptive" +
            "\'),\r\n(\'PREEMPTIVE_OS_DEVICEIOCONTROL\',\'Preemptive\'),\r\n(\'PREEMPTIVE_OS_DEVICEOPS\'" +
            ",\'Preemptive\'),\r\n(\'PREEMPTIVE_OS_DIRSVC_NETWORKOPS\',\'Preemptive\'),\r\n(\'PREEMPTIVE" +
            "_OS_DISCONNECTNAMEDPIPE\',\'Preemptive\'),\r\n(\'PREEMPTIVE_OS_DOMAINSERVICESOPS\',\'Pre" +
            "emptive\'),\r\n(\'PREEMPTIVE_OS_DSGETDCNAME\',\'Preemptive\'),\r\n(\'PREEMPTIVE_OS_DTCOPS\'" +
            ",\'Preemptive\'),\r\n(\'PREEMPTIVE_OS_ENCRYPTMESSAGE\',\'Preemptive\'),\r\n(\'PREEMPTIVE_OS" +
            "_FILEOPS\',\'Preemptive\'),\r\n(\'PREEMPTIVE_OS_FINDFILE\',\'Preemptive\'),\r\n(\'PREEMPTIVE" +
            "_OS_FLUSHFILEBUFFERS\',\'Preemptive\'),\r\n(\'PREEMPTIVE_OS_FORMATMESSAGE\',\'Preemptive" +
            "\'),\r\n(\'PREEMPTIVE_OS_FREECREDENTIALSHANDLE\',\'Preemptive\'),\r\n(\'PREEMPTIVE_OS_FREE" +
            "LIBRARY\',\'Preemptive\'),\r\n(\'PREEMPTIVE_OS_GENERICOPS\',\'Preemptive\'),\r\n(\'PREEMPTIV" +
            "E_OS_GETADDRINFO\',\'Preemptive\'),\r\n(\'PREEMPTIVE_OS_GETCOMPRESSEDFILESIZE\',\'Preemp" +
            "tive\'),\r\n(\'PREEMPTIVE_OS_GETDISKFREESPACE\',\'Preemptive\'),\r\n(\'PREEMPTIVE_OS_GETFI" +
            "LEATTRIBUTES\',\'Preemptive\'),\r\n(\'PREEMPTIVE_OS_GETFILESIZE\',\'Preemptive\'),\r\n(\'PRE" +
            "EMPTIVE_OS_GETFINALFILEPATHBYHANDLE\',\'Preemptive\'),\r\n(\'PREEMPTIVE_OS_GETLONGPATH" +
            "NAME\',\'Preemptive\'),\r\n(\'PREEMPTIVE_OS_GETPROCADDRESS\',\'Preemptive\'),\r\n(\'PREEMPTI" +
            "VE_OS_GETVOLUMENAMEFORVOLUMEMOUNTPOINT\',\'Preemptive\'),\r\n(\'PREEMPTIVE_OS_GETVOLUM" +
            "EPATHNAME\',\'Preemptive\'),\r\n(\'PREEMPTIVE_OS_INITIALIZESECURITYCONTEXT\',\'Preemptiv" +
            "e\'),\r\n(\'PREEMPTIVE_OS_LIBRARYOPS\',\'Preemptive\'),\r\n(\'PREEMPTIVE_OS_LOADLIBRARY\',\'" +
            "Preemptive\'),\r\n(\'PREEMPTIVE_OS_LOGONUSER\',\'Preemptive\'),\r\n(\'PREEMPTIVE_OS_LOOKUP" +
            "ACCOUNTSID\',\'Preemptive\'),\r\n(\'PREEMPTIVE_OS_MESSAGEQUEUEOPS\',\'Preemptive\'),\r\n(\'P" +
            "REEMPTIVE_OS_MOVEFILE\',\'Preemptive\'),\r\n(\'PREEMPTIVE_OS_NETGROUPGETUSERS\',\'Preemp" +
            "tive\'),\r\n(\'PREEMPTIVE_OS_NETLOCALGROUPGETMEMBERS\',\'Preemptive\'),\r\n(\'PREEMPTIVE_O" +
            "S_NETUSERGETGROUPS\',\'Preemptive\'),\r\n(\'PREEMPTIVE_OS_NETUSERGETLOCALGROUPS\',\'Pree" +
            "mptive\'),\r\n(\'PREEMPTIVE_OS_NETUSERMODALSGET\',\'Preemptive\'),\r\n(\'PREEMPTIVE_OS_NET" +
            "VALIDATEPASSWORDPOLICY\',\'Preemptive\'),\r\n(\'PREEMPTIVE_OS_NETVALIDATEPASSWORDPOLIC" +
            "YFREE\',\'Preemptive\'),\r\n(\'PREEMPTIVE_OS_OPENDIRECTORY\',\'Preemptive\'),\r\n(\'PREEMPTI" +
            "VE_OS_PDH_WMI_INIT\',\'Preemptive\'),\r\n(\'PREEMPTIVE_OS_PIPEOPS\',\'Preemptive\'),\r\n(\'P" +
            "REEMPTIVE_OS_PROCESSOPS\',\'Preemptive\'),\r\n(\'PREEMPTIVE_OS_QUERYCONTEXTATTRIBUTES\'" +
            ",\'Preemptive\'),\r\n(\'PREEMPTIVE_OS_QUERYREGISTRY\',\'Preemptive\'),\r\n(\'PREEMPTIVE_OS_" +
            "QUERYSECURITYCONTEXTTOKEN\',\'Preemptive\'),\r\n(\'PREEMPTIVE_OS_REMOVEDIRECTORY\',\'Pre" +
            "emptive\'),\r\n(\'PREEMPTIVE_OS_REPORTEVENT\',\'Preemptive\'),\r\n(\'PREEMPTIVE_OS_REVERTT" +
            "OSELF\',\'Preemptive\'),\r\n(\'PREEMPTIVE_OS_RSFXDEVICEOPS\',\'Preemptive\'),\r\n(\'PREEMPTI" +
            "VE_OS_SECURITYOPS\',\'Preemptive\'),\r\n(\'PREEMPTIVE_OS_SERVICEOPS\',\'Preemptive\'),\r\n(" +
            "\'PREEMPTIVE_OS_SETENDOFFILE\',\'Preemptive\'),\r\n(\'PREEMPTIVE_OS_SETFILEPOINTER\',\'Pr" +
            "eemptive\'),\r\n(\'PREEMPTIVE_OS_SETFILEVALIDDATA\',\'Preemptive\'),\r\n(\'PREEMPTIVE_OS_S" +
            "ETNAMEDSECURITYINFO\',\'Preemptive\'),\r\n(\'PREEMPTIVE_OS_SQLCLROPS\',\'Preemptive\'),\r\n" +
            "(\'PREEMPTIVE_OS_SQMLAUNCH\',\'Preemptive\'),\r\n(\'PREEMPTIVE_OS_VERIFYSIGNATURE\',\'Pre" +
            "emptive\'),\r\n(\'PREEMPTIVE_OS_VERIFYTRUST\',\'Preemptive\'),\r\n(\'PREEMPTIVE_OS_VSSOPS\'" +
            ",\'Preemptive\'),\r\n(\'PREEMPTIVE_OS_WAITFORSINGLEOBJECT\',\'Preemptive\'),\r\n(\'PREEMPTI" +
            "VE_OS_WINSOCKOPS\',\'Preemptive\'),\r\n(\'PREEMPTIVE_OS_WRITEFILE\',\'Preemptive\'),\r\n(\'P" +
            "REEMPTIVE_OS_WRITEFILEGATHER\',\'Preemptive\'),\r\n(\'PREEMPTIVE_OS_WSASETLASTERROR\',\'" +
            "Preemptive\'),\r\n(\'PREEMPTIVE_REENLIST\',\'Preemptive\'),\r\n(\'PREEMPTIVE_RESIZELOG\',\'P" +
            "reemptive\'),\r\n(\'PREEMPTIVE_ROLLFORWARDREDO\',\'Preemptive\'),\r\n(\'PREEMPTIVE_ROLLFOR" +
            "WARDUNDO\',\'Preemptive\'),\r\n(\'PREEMPTIVE_SB_STOPENDPOINT\',\'Preemptive\'),\r\n(\'PREEMP" +
            "TIVE_SERVER_STARTUP\',\'Preemptive\'),\r\n(\'PREEMPTIVE_SETRMINFO\',\'Preemptive\'),\r\n(\'P" +
            "REEMPTIVE_SHAREDMEM_GETDATA\',\'Preemptive\'),\r\n(\'PREEMPTIVE_SNIOPEN\',\'Preemptive\')" +
            ",\r\n(\'PREEMPTIVE_SOSHOST\',\'Preemptive\'),\r\n(\'PREEMPTIVE_SOSTESTING\',\'Preemptive\')," +
            "\r\n(\'PREEMPTIVE_SP_SERVER_DIAGNOSTICS\',\'Preemptive\'),\r\n(\'PREEMPTIVE_STARTRM\',\'Pre" +
            "emptive\'),\r\n(\'PREEMPTIVE_STREAMFCB_CHECKPOINT\',\'Preemptive\'),\r\n(\'PREEMPTIVE_STRE" +
            "AMFCB_RECOVER\',\'Preemptive\'),\r\n(\'PREEMPTIVE_STRESSDRIVER\',\'Preemptive\'),\r\n(\'PREE" +
            "MPTIVE_TESTING\',\'Preemptive\'),\r\n(\'PREEMPTIVE_TRANSIMPORT\',\'Preemptive\'),\r\n(\'PREE" +
            "MPTIVE_UNMARSHALPROPAGATIONTOKEN\',\'Preemptive\'),\r\n(\'PREEMPTIVE_VSS_CREATESNAPSHO" +
            "T\',\'Preemptive\'),\r\n(\'PREEMPTIVE_VSS_CREATEVOLUMESNAPSHOT\',\'Preemptive\'),\r\n(\'PREE" +
            "MPTIVE_XE_CALLBACKEXECUTE\',\'Preemptive\'),\r\n(\'PREEMPTIVE_XE_CX_FILE_OPEN\',\'Preemp" +
            "tive\'),\r\n(\'PREEMPTIVE_XE_CX_HTTP_CALL\',\'Preemptive\'),\r\n(\'PREEMPTIVE_XE_DISPATCHE" +
            "R\',\'Preemptive\'),\r\n(\'PREEMPTIVE_XE_ENGINEINIT\',\'Preemptive\'),\r\n(\'PREEMPTIVE_XE_G" +
            "ETTARGETSTATE\',\'Preemptive\'),\r\n(\'PREEMPTIVE_XE_SESSIONCOMMIT\',\'Preemptive\'),\r\n(\'" +
            "PREEMPTIVE_XE_TARGETFINALIZE\',\'Preemptive\'),\r\n(\'PREEMPTIVE_XE_TARGETINIT\',\'Preem" +
            "ptive\'),\r\n(\'PREEMPTIVE_XE_TIMERRUN\',\'Preemptive\'),\r\n(\'PREEMPTIVE_XETESTING\',\'Pre" +
            "emptive\'),\r\n(\'PWAIT_HADR_ACTION_COMPLETED\',\'Replication\'),\r\n(\'PWAIT_HADR_CHANGE_" +
            "NOTIFIER_TERMINATION_SYNC\',\'Replication\'),\r\n(\'PWAIT_HADR_CLUSTER_INTEGRATION\',\'R" +
            "eplication\'),\r\n(\'PWAIT_HADR_FAILOVER_COMPLETED\',\'Replication\'),\r\n(\'PWAIT_HADR_JO" +
            "IN\',\'Replication\'),\r\n(\'PWAIT_HADR_OFFLINE_COMPLETED\',\'Replication\'),\r\n(\'PWAIT_HA" +
            "DR_ONLINE_COMPLETED\',\'Replication\'),\r\n(\'PWAIT_HADR_POST_ONLINE_COMPLETED\',\'Repli" +
            "cation\'),\r\n(\'PWAIT_HADR_SERVER_READY_CONNECTIONS\',\'Replication\'),\r\n(\'PWAIT_HADR_" +
            "WORKITEM_COMPLETED\',\'Replication\'),\r\n(\'PWAIT_HADRSIM\',\'Replication\'),\r\n(\'PWAIT_R" +
            "ESOURCE_SEMAPHORE_FT_PARALLEL_QUERY_SYNC\',\'Full Text Search\'),\r\n(\'QUERY_TRACEOUT" +
            "\',\'Tracing\'),\r\n(\'REPL_CACHE_ACCESS\',\'Replication\'),\r\n(\'REPL_HISTORYCACHE_ACCESS\'" +
            ",\'Replication\'),\r\n(\'REPL_SCHEMA_ACCESS\',\'Replication\'),\r\n(\'REPL_TRANFSINFO_ACCES" +
            "S\',\'Replication\'),\r\n(\'REPL_TRANHASHTABLE_ACCESS\',\'Replication\'),\r\n(\'REPL_TRANTEX" +
            "TINFO_ACCESS\',\'Replication\'),\r\n(\'REPLICA_WRITES\',\'Replication\'),\r\n(\'REQUEST_FOR_" +
            "DEADLOCK_SEARCH\',\'Idle\'),\r\n(\'RESERVED_MEMORY_ALLOCATION_EXT\',\'Memory\'),\r\n(\'RESOU" +
            "RCE_SEMAPHORE\',\'Memory\'),\r\n(\'RESOURCE_SEMAPHORE_QUERY_COMPILE\',\'Compilation\'),\r\n" +
            "(\'SLEEP_BPOOL_FLUSH\',\'Idle\'),\r\n(\'SLEEP_BUFFERPOOL_HELPLW\',\'Idle\'),\r\n(\'SLEEP_DBST" +
            "ARTUP\',\'Idle\'),\r\n(\'SLEEP_DCOMSTARTUP\',\'Idle\'),\r\n(\'SLEEP_MASTERDBREADY\',\'Idle\'),\r" +
            "\n(\'SLEEP_MASTERMDREADY\',\'Idle\'),\r\n(\'SLEEP_MASTERUPGRADED\',\'Idle\'),\r\n(\'SLEEP_MEMO" +
            "RYPOOL_ALLOCATEPAGES\',\'Idle\'),\r\n(\'SLEEP_MSDBSTARTUP\',\'Idle\'),\r\n(\'SLEEP_RETRY_VIR" +
            "TUALALLOC\',\'Idle\'),\r\n(\'SLEEP_SYSTEMTASK\',\'Idle\'),\r\n(\'SLEEP_TASK\',\'Idle\'),\r\n(\'SLE" +
            "EP_TEMPDBSTARTUP\',\'Idle\'),\r\n(\'SLEEP_WORKSPACE_ALLOCATEPAGE\',\'Idle\'),\r\n(\'SOS_SCHE" +
            "DULER_YIELD\',\'CPU\'),\r\n(\'SQLCLR_APPDOMAIN\',\'SQL CLR\'),\r\n(\'SQLCLR_ASSEMBLY\',\'SQL C" +
            "LR\'),\r\n(\'SQLCLR_DEADLOCK_DETECTION\',\'SQL CLR\'),\r\n(\'SQLCLR_QUANTUM_PUNISHMENT\',\'S" +
            "QL CLR\'),\r\n(\'SQLTRACE_BUFFER_FLUSH\',\'Idle\'),\r\n(\'SQLTRACE_FILE_BUFFER\',\'Tracing\')" +
            ",\r\n(\'SQLTRACE_FILE_READ_IO_COMPLETION\',\'Tracing\'),\r\n(\'SQLTRACE_FILE_WRITE_IO_COM" +
            "PLETION\',\'Tracing\'),\r\n(\'SQLTRACE_INCREMENTAL_FLUSH_SLEEP\',\'Idle\'),\r\n(\'SQLTRACE_P" +
            "ENDING_BUFFER_WRITERS\',\'Tracing\'),\r\n(\'SQLTRACE_SHUTDOWN\',\'Tracing\'),\r\n(\'SQLTRACE" +
            "_WAIT_ENTRIES\',\'Idle\'),\r\n(\'THREADPOOL\',\'Worker Thread\'),\r\n(\'TRACE_EVTNOTIF\',\'Tra" +
            "cing\'),\r\n(\'TRACEWRITE\',\'Tracing\'),\r\n(\'TRAN_MARKLATCH_DT\',\'Transaction\'),\r\n(\'TRAN" +
            "_MARKLATCH_EX\',\'Transaction\'),\r\n(\'TRAN_MARKLATCH_KP\',\'Transaction\'),\r\n(\'TRAN_MAR" +
            "KLATCH_NL\',\'Transaction\'),\r\n(\'TRAN_MARKLATCH_SH\',\'Transaction\'),\r\n(\'TRAN_MARKLAT" +
            "CH_UP\',\'Transaction\'),\r\n(\'TRANSACTION_MUTEX\',\'Transaction\'),\r\n(\'WAIT_FOR_RESULTS" +
            "\',\'User Wait\'),\r\n(\'WAITFOR\',\'User Wait\'),\r\n(\'WRITE_COMPLETION\',\'Other Disk IO\')," +
            "\r\n(\'WRITELOG\',\'Tran Log IO\'),\r\n(\'XACT_OWN_TRANSACTION\',\'Transaction\'),\r\n(\'XACT_R" +
            "ECLAIM_SESSION\',\'Transaction\'),\r\n(\'XACTLOCKINFO\',\'Transaction\'),\r\n(\'XACTWORKSPAC" +
            "E_MUTEX\',\'Transaction\'),\r\n(\'XE_DISPATCHER_WAIT\',\'Idle\'),\r\n(\'XE_TIMER_EVENT\',\'Idl" +
            "e\')) AS wc(wait_type, wait_category)\r\n\tON ws.wait_type = wc.wait_type\r\nWHERE\r\nws" +
            ".wait_type NOT IN (\r\n\tN\'BROKER_EVENTHANDLER\', N\'BROKER_RECEIVE_WAITFOR\', N\'BROKE" +
            "R_TASK_STOP\',\r\n\tN\'BROKER_TO_FLUSH\', N\'BROKER_TRANSMITTER\', N\'CHECKPOINT_QUEUE\',\r" +
            "\n\tN\'CHKPT\', N\'CLR_AUTO_EVENT\', N\'CLR_MANUAL_EVENT\', N\'CLR_SEMAPHORE\',\r\n\tN\'DBMIRR" +
            "OR_DBM_EVENT\', N\'DBMIRROR_EVENTS_QUEUE\', N\'DBMIRROR_WORKER_QUEUE\',\r\n\tN\'DBMIRRORI" +
            "NG_CMD\', N\'DIRTY_PAGE_POLL\', N\'DISPATCHER_QUEUE_SEMAPHORE\',\r\n\tN\'EXECSYNC\', N\'FSA" +
            "GENT\', N\'FT_IFTS_SCHEDULER_IDLE_WAIT\', N\'FT_IFTSHC_MUTEX\',\r\n\tN\'HADR_CLUSAPI_CALL" +
            "\', N\'HADR_FILESTREAM_IOMGR_IOCOMPLETION\', N\'HADR_LOGCAPTURE_WAIT\', \r\n\tN\'HADR_NOT" +
            "IFICATION_DEQUEUE\', N\'HADR_TIMER_TASK\', N\'HADR_WORK_QUEUE\',\r\n\tN\'KSOURCE_WAKEUP\'," +
            " N\'LAZYWRITER_SLEEP\', N\'LOGMGR_QUEUE\', \r\n\tN\'MEMORY_ALLOCATION_EXT\', N\'ONDEMAND_T" +
            "ASK_QUEUE\',\r\n\tN\'PARALLEL_REDO_WORKER_WAIT_WORK\',\r\n\tN\'PREEMPTIVE_HADR_LEASE_MECHA" +
            "NISM\', N\'PREEMPTIVE_SP_SERVER_DIAGNOSTICS\',\r\n\tN\'PREEMPTIVE_OS_LIBRARYOPS\', N\'PRE" +
            "EMPTIVE_OS_COMOPS\', N\'PREEMPTIVE_OS_CRYPTOPS\',\r\n\tN\'PREEMPTIVE_OS_PIPEOPS\', N\'PRE" +
            "EMPTIVE_OS_AUTHENTICATIONOPS\',\r\n\tN\'PREEMPTIVE_OS_GENERICOPS\', N\'PREEMPTIVE_OS_VE" +
            "RIFYTRUST\',\r\n\tN\'PREEMPTIVE_OS_FILEOPS\', N\'PREEMPTIVE_OS_DEVICEOPS\', N\'PREEMPTIVE" +
            "_OS_QUERYREGISTRY\',\r\n\tN\'PREEMPTIVE_OS_WRITEFILE\',\r\n\tN\'PREEMPTIVE_XE_CALLBACKEXEC" +
            "UTE\', N\'PREEMPTIVE_XE_DISPATCHER\',\r\n\tN\'PREEMPTIVE_XE_GETTARGETSTATE\', N\'PREEMPTI" +
            "VE_XE_SESSIONCOMMIT\',\r\n\tN\'PREEMPTIVE_XE_TARGETINIT\', N\'PREEMPTIVE_XE_TARGETFINAL" +
            "IZE\',\r\n\tN\'PWAIT_ALL_COMPONENTS_INITIALIZED\', N\'PWAIT_DIRECTLOGCONSUMER_GETNEXT\'," +
            "\r\n\tN\'QDS_PERSIST_TASK_MAIN_LOOP_SLEEP\',\r\n\tN\'QDS_ASYNC_QUEUE\',\r\n\tN\'QDS_CLEANUP_ST" +
            "ALE_QUERIES_TASK_MAIN_LOOP_SLEEP\', N\'REQUEST_FOR_DEADLOCK_SEARCH\',\r\n\tN\'RESOURCE_" +
            "QUEUE\', N\'SERVER_IDLE_CHECK\', N\'SLEEP_BPOOL_FLUSH\', N\'SLEEP_DBSTARTUP\',\r\n\tN\'SLEE" +
            "P_DCOMSTARTUP\', N\'SLEEP_MASTERDBREADY\', N\'SLEEP_MASTERMDREADY\',\r\n\tN\'SLEEP_MASTER" +
            "UPGRADED\', N\'SLEEP_MSDBSTARTUP\', N\'SLEEP_SYSTEMTASK\', N\'SLEEP_TASK\',\r\n\tN\'SLEEP_T" +
            "EMPDBSTARTUP\', N\'SNI_HTTP_ACCEPT\', N\'SP_SERVER_DIAGNOSTICS_SLEEP\',\r\n\tN\'SQLTRACE_" +
            "BUFFER_FLUSH\', N\'SQLTRACE_INCREMENTAL_FLUSH_SLEEP\', N\'SQLTRACE_WAIT_ENTRIES\',\r\n\t" +
            "N\'WAIT_FOR_RESULTS\', N\'WAITFOR\', N\'WAITFOR_TASKSHUTDOWN\', N\'WAIT_XTP_HOST_WAIT\'," +
            "\r\n\tN\'WAIT_XTP_OFFLINE_CKPT_NEW_LOG\', N\'WAIT_XTP_CKPT_CLOSE\',\r\n\tN\'XE_BUFFERMGR_AL" +
            "LPROCESSED_EVENT\', N\'XE_DISPATCHER_JOIN\',\r\n\tN\'XE_DISPATCHER_WAIT\', N\'XE_LIVE_TAR" +
            "GET_TVF\', N\'XE_TIMER_EVENT\')\r\nAND waiting_tasks_count > 0\r\nORDER BY\r\nwaiting_tas" +
            "ks_count DESC\r\nOPTION (RECOMPILE);")]
        public string WaitStats {
            get {
                return ((string)(this["WaitStats"]));
            }
        }
        
        [global::System.Configuration.ApplicationScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute(@"DECLARE @sys_info TABLE (
	cpu_count INT,
	server_memory INT,
	uptime INT
)
IF OBJECT_ID('master.sys.dm_os_sys_info') IS NOT NULL
BEGIN
	INSERT INTO @sys_info ( cpu_count, server_memory, uptime )
	EXEC('SELECT cpu_count, physical_memory_kb, DATEDIFF(MINUTE,sqlserver_start_time,GETDATE())	FROM sys.dm_os_sys_info')
END
SELECT
'sqlserver_server_properties' As [measurement],
REPLACE(@@SERVERNAME,'\',':') AS [sql_instance],
SERVERPROPERTY('ServerName') AS [host],
SUM( CASE WHEN state = 0 THEN 1 ELSE 0 END ) AS db_online,
SUM( CASE WHEN state = 1 THEN 1 ELSE 0 END ) AS db_restoring,
SUM( CASE WHEN state = 2 THEN 1 ELSE 0 END ) AS db_recovering,
SUM( CASE WHEN state = 3 THEN 1 ELSE 0 END ) AS db_recoveryPending,
SUM( CASE WHEN state = 4 THEN 1 ELSE 0 END ) AS db_suspect,
SUM( CASE WHEN state = 10 THEN 1 ELSE 0 END ) AS db_offline,
MAX( sinfo.cpu_count ) AS cpu_count,
MAX( sinfo.server_memory ) AS server_memory,
MAX( sinfo.uptime ) AS uptime,
SERVERPROPERTY('ProductVersion') AS sql_version
FROM	sys.databases
CROSS APPLY (
	SELECT	*
	FROM	@sys_info
) AS sinfo
OPTION( RECOMPILE );")]
        public string ServerProperties {
            get {
                return ((string)(this["ServerProperties"]));
            }
        }
        
        [global::System.Configuration.ApplicationScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("SET NOCOUNT ON;\r\nSET ARITHABORT ON;\r\nSET QUOTED_IDENTIFIER ON;\r\nSET TRANSACTION I" +
            "SOLATION LEVEL READ UNCOMMITTED\r\nDECLARE @PCounters TABLE\r\n(\r\n\tcounter_name nvar" +
            "char(64),\r\n\tcntr_value bigint,\r\n\tPrimary Key(counter_name)\r\n);\r\nINSERT @PCounter" +
            "s (counter_name, cntr_value)\r\nSELECT \'PointInTimeRecovery\', Value = CASE\r\n\tWHEN " +
            " 1 > 1.0 * COUNT(*)  / NULLIF((SELECT COUNT(*) FROM sys.databases d WHERE databa" +
            "se_id > 4), 0)\r\n\tTHEN 0 ELSE 1 END\r\nFROM sys.databases d\r\nWHERE database_id > 4\r" +
            "\n\tAND recovery_model IN (1)\r\nUNION ALL\r\nSELECT \'ConnectionMemoryPerConnection_by" +
            "tes\',  Ratio = CAST((cntr_value / (SELECT 1.0 * cntr_value FROM sys.dm_os_perfor" +
            "mance_counters WHERE counter_name = \'User Connections\')) * 1024 as int)\r\nFROM sy" +
            "s.dm_os_performance_counters\r\nWHERE counter_name = \'Connection Memory (KB)\'\r\nUNI" +
            "ON ALL\r\nSELECT \'SqlCompilationPerBatchRequest_Ratio\',  SqlCompilationPercent = 1" +
            "00.0 * cntr_value / (SELECT 1.0*cntr_value FROM sys.dm_os_performance_counters W" +
            "HERE counter_name = \'Batch Requests/sec\')\r\nFROM sys.dm_os_performance_counters\r\n" +
            "WHERE counter_name = \'SQL Compilations/sec\'\r\nUNION ALL\r\nSELECT \'SqlReCompilation" +
            "PerBatchRequest_Ratio\', SqlReCompilationPercent = 100.0 *cntr_value / (SELECT 1." +
            "0*cntr_value FROM sys.dm_os_performance_counters WHERE counter_name = \'Batch Req" +
            "uests/sec\')\r\nFROM sys.dm_os_performance_counters\r\nWHERE counter_name = \'SQL Re-C" +
            "ompilations/sec\'\r\nUNION ALL\r\nSELECT \'PageLookupPerBatchRequest_Ratio\',PageLookup" +
            "Percent = 100.0 * cntr_value / (SELECT 1.0*cntr_value FROM sys.dm_os_performance" +
            "_counters WHERE counter_name = \'Batch Requests/sec\')\r\nFROM sys.dm_os_performance" +
            "_counters\r\nWHERE counter_name = \'Page lookups/sec\'\r\nUNION ALL\r\nSELECT \'PageSplit" +
            "PerBatchRequest_Ratio\',PageSplitPercent = 100.0 * cntr_value / (SELECT 1.0*cntr_" +
            "value FROM sys.dm_os_performance_counters WHERE counter_name = \'Batch Requests/s" +
            "ec\')\r\nFROM sys.dm_os_performance_counters\r\nWHERE counter_name = \'Page splits/sec" +
            "\'\r\nUNION ALL\r\nSELECT \'PageFileUsage_percent\', CAST(100 * (1 - available_page_fil" +
            "e_kb * 1. / total_page_file_kb) as decimal(9,2)) as [PageFileUsage (%)]\r\nFROM sy" +
            "s.dm_os_sys_memory\r\nUNION ALL\r\nSELECT \'SignalWait_percent\', SignalWaitPercent = " +
            "CAST(100.0 * SUM(signal_wait_time_ms) / SUM (wait_time_ms) AS NUMERIC(20,2))\r\nFR" +
            "OM sys.dm_os_wait_stats\r\nUNION ALL\r\nSELECT \'AverageTasks\', AverageTaskCount = (S" +
            "ELECT AVG(current_tasks_count) FROM sys.dm_os_schedulers WITH (NOLOCK) WHERE sch" +
            "eduler_id < 255 )\r\nUNION ALL\r\nSELECT \'AverageRunnableTasks\', AverageRunnableTask" +
            "Count = (SELECT AVG(runnable_tasks_count) FROM sys.dm_os_schedulers WITH (NOLOCK" +
            ") WHERE scheduler_id < 255 )\r\nUNION ALL\r\nSELECT \'AveragePendingDiskIO\', AverageP" +
            "endingDiskIOCount = (SELECT AVG(pending_disk_io_count) FROM sys.dm_os_schedulers" +
            " WITH (NOLOCK) WHERE scheduler_id < 255 )\r\nUNION ALL\r\nSELECT \'BufferPoolRate_byt" +
            "es_per_sec\', BufferPoolRate = (1.0*cntr_value * 8 * 1024) /\r\n\t(SELECT 1.0*cntr_v" +
            "alue FROM sys.dm_os_performance_counters  WHERE object_name like \'%Buffer Manage" +
            "r%\' AND counter_name = \'Page life expectancy\')\r\nFROM sys.dm_os_performance_count" +
            "ers\r\nWHERE object_name like \'%Buffer Manager%\'\r\nAND counter_name = \'Database pag" +
            "es\'\r\nUNION ALL\r\nSELECT \'ReadaheadPerPageRead_Ratio\', Readahead = 100.0 *cntr_val" +
            "ue / (SELECT 1.0*cntr_value FROM sys.dm_os_performance_counters WHERE counter_na" +
            "me = \'Page Reads/sec\')\r\nFROM sys.dm_os_performance_counters\r\nWHERE counter_name " +
            "= \'Readahead pages/sec\'\r\nUNION ALL\r\nSELECT \'TotalTargetMemoryRatio\', TotalTarget" +
            "MemoryRatio = 100.0 * cntr_value / (SELECT 1.0*cntr_value FROM sys.dm_os_perform" +
            "ance_counters WHERE counter_name = \'Target Server Memory (KB)\')\r\nFROM sys.dm_os_" +
            "performance_counters\r\nWHERE counter_name = \'Total Server Memory (KB)\'\r\nIF OBJECT" +
            "_ID(\'tempdb..#PCounters\') IS NOT NULL DROP TABLE #PCounters;\r\nSELECT * INTO #PCo" +
            "unters FROM @PCounters\r\nDECLARE @DynamicPivotQuery AS NVARCHAR(MAX)\r\nDECLARE @Co" +
            "lumnName AS NVARCHAR(MAX)\r\nSELECT @ColumnName= ISNULL(@ColumnName + \',\',\'\') + QU" +
            "OTENAME(counter_name)\r\nFROM (SELECT DISTINCT counter_name FROM @PCounters) AS bl" +
            "\r\nSET @DynamicPivotQuery = N\'\r\nSELECT measurement = \'\'Performance metrics\'\', sql" +
            "_instance = REPLACE(@@SERVERNAME, \'\'\\\'\', \'\':\'\'), type = \'\'Performance metrics\'\'\r" +
            "\n, \' + @ColumnName + \'  FROM\r\n(\r\nSELECT counter_name, cntr_value\r\nFROM #PCounter" +
            "s\r\n) as V\r\nPIVOT(SUM(cntr_value) FOR counter_name IN (\' + @ColumnName + \')) AS P" +
            "VTTable\r\n\'\r\nEXEC sp_executesql @DynamicPivotQuery;")]
        public string PerformanceMetric {
            get {
                return ((string)(this["PerformanceMetric"]));
            }
        }
    }
}
